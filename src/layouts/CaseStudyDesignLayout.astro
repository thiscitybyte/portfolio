---
// Imports
const { frontmatter } = Astro.props

// Components
// - Layout
import Layout from './LayoutDesign.astro'
import Col from '../components/ui/Col.astro'
import Row from '../components/ui/Row.astro'
import Section from '../components/ui/Section.astro'
// - UI
import { Image } from 'astro:assets'
import Vimeo from '../components/ui/Vimeo.astro';
import Slider from '../components/ui/Slider.astro'
import Testimonial from '../components/ui/Testimonial.astro'

// Content
// - SEO
const SEO = {
	title: `${frontmatter.title} | Milo`,
	description: `${frontmatter.description}`
}
// Helper function to check if URL is Vimeo
const isVimeoUrl = (url: string) => {
  try {
    const vimeoRegex = /(?:vimeo\.com\/|player\.vimeo\.com\/video\/)(\d+)/i;
    return vimeoRegex.test(url) || url.includes('vimeo.com/video/');
  } catch {
    return false;
  }
};

// Helper function to extract Vimeo ID from URL
const getVimeoId = (url: string) => {
  try {
    const match = url.match(/(?:vimeo\.com\/|player\.vimeo\.com\/video\/|\/)(\d+)/i);
    return match ? match[1] : null;
  } catch {
    return null;
  }
};
---

<Layout title={SEO.title} description={SEO.description}>
	<!-- Intro -->
	<Section id="intro" classes="!pt-0">
		<Row>
			<Col span="10" spanMobile="4">
				<div>
					<h1>
						{frontmatter.title}
					</h1>
				</div>
			</Col>
		</Row>
	</Section>

	<!-- Image -->
	<Section classes="!p-0">
		<Row>
			<Col span="12">
				<Image
					src={frontmatter.heroImage}
					alt={frontmatter.title}
					width={1460}
					height={700}
					class="w-full border border-neutral-50 dark:border-neutral-500"
				/>
			</Col>
		</Row>
	</Section>

	<!-- About the project -->
	<Section id="about-the-project">
		<Row classes="collection-body basic-text basic-text--lg">
			<Col span="2" spanMobile="4">
				<h2 class="lg:text-right">About the project</h2>
			</Col>
			<Col span="5" spanMobile="4">
				<div set:html={frontmatter.aboutProject.leftCol} />
			</Col>
			<Col span="5" spanMobile="4">
				<div set:html={frontmatter.aboutProject.rightCol} />
			</Col>
		</Row>
	</Section>

	<!-- What we did
	<Section id="what-we-did">
		<Row classes="collection-body basic-text basic-text--lg">
			<Col span="2" spanMobile="4">
				<h2 class="lg:text-right">What we did</h2>
			</Col>
			<Col span="5" spanMobile="4">
				<div set:html={frontmatter.whatWeDid.leftCol} />
			</Col>
			<Col span="5" spanMobile="4">
				<div set:html={frontmatter.whatWeDid.rightCol} />
			</Col>
		</Row>
	</Section> -->

{frontmatter.images && (
  <Section classes="!pt-0" id="images">
    <Row>
      <Col span="2" />
      <Col span="10" spanMobile="4">
        <div class="grid grid-cols-1 gap-9 lg:grid-cols-12">
          {frontmatter.images.map((item: string | { src: string; width?: number; alt?: string; caption?: string }) => {
            // Handle both string (legacy) and object formats
            const isObject = typeof item === 'object';
            const src = isObject ? item.src : item;
            const width = isObject ? (item.width || 12) : 12; // Default to full width
            const alt = isObject ? (item.alt || frontmatter.title) : frontmatter.title;
            
            // Determine column span class based on width (1-12)
            const colSpanClass = `lg:col-span-${width} col-span-full`;
            
            if (isVimeoUrl(src)) {
              const vimeoId = getVimeoId(src);
              if (vimeoId) {
                return (
                  <div class={`${colSpanClass} mb-9`}>
                    <div class="w-full border border-neutral-50 dark:border-neutral-500">
                      <Vimeo id={vimeoId} title={alt} className="w-full" />
                    </div>
                    {isObject && item.caption && (
                      <p class="mt-2 text-sm text-neutral-500">{item.caption}</p>
                    )}
                  </div>
                );
              }
            }
            
            return (
              <div class={`${colSpanClass} mb-9`}>
                <Image
                  src={src}
                  alt={alt}
                  width={1200}
                  height={800}
                  class="w-full border border-neutral-50 dark:border-neutral-500"
                />
                {isObject && item.caption && (
                  <p class="mt-2 text-sm text-neutral-500">{item.caption}</p>
                )}
              </div>
            );
          })}
        </div>
      </Col>
    </Row>
  </Section>
)}

	<!-- Client feedback -->
	{frontmatter.clientFeedback && frontmatter.clientFeedback.length > 0 && (
	<Section id="client-feedback">
		<Row>
			<Col span="2" spanMobile="4">
				<h2 class="lg:text-right">Feedback</h2>
			</Col>
			<Col span="10" spanMobile="4">
				<Slider
					slidesPerView={1}
					id="feedbackSlider"
					delay={3500}
					showNavigation={false}
					centeredSlides={true}
					initialSlide={0}
				>
					{
						frontmatter.clientFeedback.map((item: any) => (
							<div class="swiper-slide">
								<Testimonial
									blockquote={item.blockquote}
									figcaption={item.figcaption}
									cite={item.cite}
									align="left"
									quoteClasses="italic font-headings"
								/>
							</div>
						))
					}
				</Slider>
			</Col>
		</Row>
	</Section>
	)}
</Layout>

<style>
	.collection-body {
		@apply mx-auto max-w-3xl px-6 py-12 lg:py-24;
	}
</style>
