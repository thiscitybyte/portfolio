---
// Slider
// ------------
// Description: the slider component is a ui element that allows users to browse through a series of images or content.
// Properties:
// - delay: The delay of the slider
// - effect: The effect of the slider
// - slidesPerView: The number of slides per view
// - showPagination: Whether to show the pagination
// - showNavigation: Whether to show the navigation
// - centeredSlides: Whether to center the slides
// - spaceBetween: The space between the slides
// - initialSlide: The initial slide
// - id: The id of the slider
// - classes: Additional classes to be added to the slider
// - slideClasses: Additional classes to be added to the slide
// Reference: https://swiperjs.com/swiper-api

// Components
// - UI
import { Image } from 'astro:assets'
import '../../styles/swiper.css'

// Props
type Props = {
	delay?: number
	effect?: string
	slidesPerView?: number
	showPagination?: boolean
	showNavigation?: boolean
	centeredSlides?: boolean
	spaceBetween?: number
	initialSlide?: number
	id?: string
	classes?: string
	slideClasses?: string
}
const {
	delay,
	effect = 'slide',
	slidesPerView = 1,
	showPagination = true,
	showNavigation = true,
	centeredSlides = false,
	spaceBetween = 16,
	initialSlide = 0,
	id,
	classes = '',
	slideClasses = ''
} = Astro.props
---

<div class:list={['swiper', { [`swiper-${id}`]: id }, classes]}>
	<div class="swiper-wrapper">
		<slot />
	</div>
	{showPagination && <div class="swiper-pagination" />}
	{
		showNavigation && (
			<>
				<div class="swiper-button-prev" />
				<div class="swiper-button-next" />
			</>
		)
	}
</div>

<script
	is:inline
	define:vars={{ id, delay, slidesPerView, effect, spaceBetween, centeredSlides, initialSlide }}
>
	document.addEventListener('astro:page-load', () => {
		const swiperScript = document.createElement('script')
		swiperScript.src = 'https://cdn.jsdelivr.net/npm/swiper@8/swiper-bundle.min.js'
		document.head.appendChild(swiperScript)

		swiperScript.onload = () => {
			const slidesID = id
			const swiperDelay = delay
			const swiperSlidesPerView = slidesPerView
			const swiperEffect = effect
			const swiperSpaceBetween = spaceBetween
			const swiperCenteredSlides = centeredSlides
			const swiperInitialSlide = initialSlide
			const pagination = document.querySelector(`.swiper-${slidesID} .swiper-pagination`)
			const next = document.querySelector(`.swiper-${slidesID} .swiper-button-next`)
			const prev = document.querySelector(`.swiper-${slidesID} .swiper-button-prev`)

			const swiperConfig = {
				loop: true,
				pagination: {
					el: pagination,
					clickable: true,
					renderBullet: function (index, className) {
						return `<span class="${className} custom-pagination-bullet">${String(index + 1).padStart(2, '0')}</span>`
					}
				},
				navigation: {
					nextEl: next,
					prevEl: prev
				},
				autoplay: swiperDelay
					? {
							delay: swiperDelay
						}
					: false,
				effect: swiperEffect,
				slidesPerView: swiperSlidesPerView,
				centeredSlides: swiperCenteredSlides,
				initialSlide: swiperInitialSlide,
				spaceBetween: parseInt(swiperSpaceBetween)
			}

			new Swiper(`.swiper-${slidesID}`, swiperConfig)
		}
	})
</script>
