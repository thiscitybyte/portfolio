---
// Section
// ------------
// Description: a foundational component representing a section of content within page. The section component can contain any number of rows.
// Properties:
// - Id: the id of the section
// - FullWidth: whether the section is will expand to full width or not
// - StickyCol: specifies wether the section can contain a sticky column or not
// - Padding: by default each section has a vertical padding. The padding property defines where the padding is applied (top, bottom, both, none), default is both
// - VAlign: aligns the content of the section vertically (top, center, bottom)
// - classes: additional classes

// Props
type Props = {
	id?: string
	fullWidth?: boolean
	stickyCol?: boolean
	padding?: 'both' | 'top' | 'bottom' | 'none'
	vAlign?: string
	classes?: string
}
const { id, fullWidth, stickyCol = false, padding = 'both', vAlign, classes } = Astro.props
---

<section
	{...id ? { id } : {}}
	class:list={[
		'section',
		{ 'section--sticky-col': stickyCol },
		{ 'section--fullwidth': fullWidth },
		{ 'section--padded': padding === 'both' },
		{ 'section--padded-t': padding === 'top' },
		{ 'section--padded-b': padding === 'bottom' },
		{ [`section--v-allign-${vAlign}`]: vAlign },
		{ 'section--fullwidth': fullWidth },
		{ [`${classes}`]: classes }
	]}
>
	<div class="container">
		<slot />
	</div>
</section>

<style>
	.section {
		@apply relative text-neutral-600 dark:text-neutral-400 [&.section--sticky-col_.container]:h-full [&:not(.section--sticky-col)]:overflow-hidden;
	}
	.section--padded {
		@apply py-12 lg:py-24;
	}
	.section--padded-t {
		@apply pt-12 lg:pt-24;
	}
	.section--padded-b {
		@apply pb-12 lg:pb-24;
	}
	.section--v-allign-top {
		@apply flex flex-col justify-start;
	}
	.section--v-allign-center {
		@apply flex flex-col justify-center;
	}
	.section--v-allign-bottom {
		@apply flex flex-col justify-end;
	}
	.container {
		@apply relative z-[1] mx-auto px-6 [.section--fullwidth_&]:max-w-full [.section--fullwidth_&]:md:px-0;
	}
</style>
