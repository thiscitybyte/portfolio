---
// Case studies grid Section
// ------------
// Description: A grid of case studies sorted by date in a 3 column layout.
// Properties:
// - data: An array of case studies

// Components
// - Layout
import Section from '../../../components/ui/Section.astro'
import Row from '../../../components/ui/Row.astro'
import Col from '../../../components/ui/Col.astro'
// - UI
import CaseStudyCard from '../../../components/ui/cards/CaseStudyCard.astro'
import Pagination from '../../ui/Pagination.astro'

// Props
type Props = {
	data: any
	pagination?: {
		first: string
		prev: string
		next: string
		last: string
		current: string
		length: number
		size: number
		total: number
	}
}
const { data: allCaseStudies, pagination } = Astro.props

// Function to sort case studies by date
const sortedCaseStudies = allCaseStudies.sort((a: any, b: any) => {
	return new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime()
})
---

<Section>
	<Row classes="!gap-y-12">
		{
			sortedCaseStudies.map((caseStudy: any) => (
				<Col span="4">
					<CaseStudyCard
						link={`/case-studies/${caseStudy.id}`}
						title={caseStudy.data.title}
						image={caseStudy.data.cardImage}
						roles={caseStudy.data.roles}
					>
						{caseStudy.data.description}
					</CaseStudyCard>
				</Col>
			))
		}
	</Row>
	{
		pagination && (
			<Row classes="pt-16">
				<Col span="12">
					<Pagination
						first={pagination.first}
						prev={pagination.prev}
						next={pagination.next}
						last={pagination.last}
						current={pagination.current}
						length={pagination.length}
						size={pagination.size}
						total={pagination.total}
					/>
				</Col>
			</Row>
		)
	}
</Section>
